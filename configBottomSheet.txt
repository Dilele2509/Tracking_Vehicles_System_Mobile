import React, { useState, useCallback, useRef, useMemo } from 'react';
import { useFocusEffect } from '@react-navigation/native';
import {
  View,
  Text,
  StyleSheet,
  Image,
  TextInput,
  ScrollView,
  TouchableOpacity,
} from 'react-native';
import { Ionicons, MaterialIcons } from '@expo/vector-icons';
import GlobalStyles, { primaryColor } from '../../../../assets/styles/GlobalStyles';
import { GestureHandlerRootView } from 'react-native-gesture-handler';
import {
  BottomSheetModal,
  BottomSheetModalProvider,
  BottomSheetView,
} from '@gorhom/bottom-sheet';
import axios from '../../../API/axios';
import { BASEURL } from '@env';

  const bottomSheetModalRef = useRef(null);
  const snapPoints = useMemo(() => ['40%', '50%'], []);
  const [isEditing, setIsEditing] = useState(null);
  const [editingContent, setEditingContent] = useState('');
  const [expandedPosts, setExpandedPosts] = useState({});

  // callbacks
  const handlePresentModalPress = useCallback(() => {
    bottomSheetModalRef.current?.present();
  }, []);
  const handleCloseModal = useCallback(() => {
    bottomSheetModalRef.current?.dismiss();
  }, []);

  return (
    <>
      {/* <BottomSheetModalProvider>
        <GestureHandlerRootView style={stylesModal.container}>
          <BottomSheetModal
            snapPoints={snapPoints}
            ref={bottomSheetModalRef}
          >
            <BottomSheetView>
              <View style={stylesOptions.inputContainer}>
                <TouchableOpacity style={stylesOptions.optionsBtn}>
                  <Ionicons name="create-outline" size={24} color={primaryColor.darkPrimary} />
                  <Text style={stylesOptions.optionsBtnText}>Edit Post Content</Text>
                </TouchableOpacity>

                <TouchableOpacity style={stylesOptions.optionsBtn}>
                  <Ionicons name="eye-off-outline" size={24} color={primaryColor.darkPrimary} />
                  <Text style={stylesOptions.optionsBtnText}>Hide Post</Text>
                </TouchableOpacity>

                <TouchableOpacity style={stylesOptions.optionsBtn}>
                  <Ionicons name="trash-outline" size={24} color={primaryColor.darkPrimary} />
                  <Text style={stylesOptions.optionsBtnText}>Delete Post</Text>
                </TouchableOpacity>

                <TouchableOpacity style={stylesOptions.cancelBtn} onPress={handleCloseModal}>
                  <Text style={stylesOptions.postButtonText}>Cancel</Text>
                </TouchableOpacity>
              </View>
            </BottomSheetView>
          </BottomSheetModal>
        </GestureHandlerRootView>
      </BottomSheetModalProvider > */}
    </>
  );
};

const stylesOptions = StyleSheet.create({
  container: {
    /* 
    flex: 1,
    justifyContent: 'flex-end', 
    backgroundColor: 'rgba(0, 0, 0, 0.5)',*/ // Make background partially transparent
  },
  inputContainer: {
    backgroundColor: 'transparent',
    borderTopLeftRadius: 20,
    borderTopRightRadius: 20,
    padding: 16,
    // alignSelf: 'stretch', // Adjust to fit content width
  },
  optionsBtn: {
    flexDirection: 'row',
    alignItems: 'center',
    paddingVertical: 12,
  },
  optionsBtnText: {
    marginLeft: 12,
    fontSize: 16,
    color: primaryColor.darkPrimary,
  },
  cancelBtn: {
    marginTop: 12,
    paddingVertical: 12,
    alignItems: 'center',
    backgroundColor: primaryColor.redPrimary,
    borderRadius: 10,
  },
  postButtonText: {
    fontSize: 16,
    color: primaryColor.whitePrimary,
  },
});

export default PostManageScreen;
